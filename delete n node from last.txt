19.Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeNthFromEnd(self, head, n):
        c=0;
        i=1;
        curr=head
        while(curr!=None):
            c=c+1;
            curr=curr.next;
        if(c==1 and n==1):
            head=None
            return head
        elif(c==n):
            head=head.next;
            return head
        a=head;
        b=head.next;
        while(i!=c-n):
            i=i+1;
            a=a.next;
            b=b.next;
        a.next=b.next;
        return head